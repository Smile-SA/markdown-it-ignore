/*! markdown-it-ignore 0.0.1 https://github.com/[object Object] @license GPL */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).markdownitIgnore=t()}(this,(function(){"use strict";const e={secure:!0};return function(t,n={}){t.block.ruler.before("fence","ignore",(function(t,r,o,s){let i=t.bMarks[r]+t.tShift[r],f=t.eMarks[r];if(t.sCount[r]-t.blkIndent>=4)return!1;if(i+3>f)return!1;const c=(n=Object.assign({},e,n)).secure,u=t.src.charCodeAt(i);if(58!==u)return!1;let l=i;i=t.skipChars(i,u);let a=i-l;if(a<3)return!1;const d=t.src.slice(l,i),k=t.src.slice(i,f);if(58===u&&k.indexOf(String.fromCharCode(u))>=0)return!1;if(s)return!0;let p=r,b=!1;for(;(p++,!(p>=o))&&(i=l=t.bMarks[p]+t.tShift[p],f=t.eMarks[p],!(i<f&&t.sCount[p]<t.blkIndent));)if(t.src.charCodeAt(i)===u&&!(t.sCount[p]-t.blkIndent>=4||(i=t.skipChars(i,u),i-l<a||(i=t.skipSpaces(i),i<f)))){b=!0;break}a=t.sCount[r],t.line=p+(b?1:0);const h=t.push(c?"text":"html_block","",0);return h.info=k,h.content=t.getLines(r+1,p,a,!0),h.markup=d,h.map=[r,t.line],!0}),{alt:["paragraph","reference","blockquote","list"]})}}));
